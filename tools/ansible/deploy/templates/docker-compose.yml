version: '3.4'

networks:
  backend:
    driver: "bridge"
  host_nginx:
    external:
      name: host_nginx
services:
  mpatate:
    image: nginx
    restart: always
    depends_on:
      - php
    volumes:
      - ./public:/var/www/public:ro
      - ./tools/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./tools/docker/nginx/nginxconfig.io:/etc/nginx/nginxconfig.io:ro
      - ./tools/docker/nginx/sites-available:/etc/nginx/sites-enabled:ro
    networks:
      - host_nginx
      - backend
  php:
    user: "{{ ansible_user_id.stdout }}:{{ ansible_group_id.stdout }}"
    image: "{{ default_image }}"
    restart: always
    volumes:
      - .:/var/www
      - {{ ansistrano_shared_path }}/.env.local:/var/www/.env.local
      - {{ ansistrano_shared_path }}/var/spool:/var/www/var/spool
      - {{ ansistrano_shared_path }}/var/log:/var/www/var/log
      - {{ ansistrano_shared_path }}/var/cache:/var/www/var/cache
      - {{ ansistrano_shared_path }}/var/data:/var/www/var/data
    working_dir: /var/www
    depends_on:
      - redis
      - {{ db_host }}
    networks:
      - backend

  {{ db_host }}:
    user: "{{ ansible_user_id.stdout }}:{{ ansible_group_id.stdout }}"
    image: mysql
    restart: always
    environment:
      MYSQL_USER: "{{ db_user }}"
      MYSQL_PASSWORD: "{{ db_password }}"
      MYSQL_DATABASE: "{{ db_database }}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    volumes:
      - db-data:/var/lib/mysql # persist data even
    networks:
      - backend
  bot:
    user: "{{ ansible_user_id.stdout }}:{{ ansible_group_id.stdout }}"
    restart: always
    image: "{{ default_image_bot }}"
    environment:
      token: "{{ discord_bot }}"
      clientId: "{{ oauth_discord_id }}"
      voiceCategoryName: "Salons vocaux"
      db_host: "{{ db_host }}"
      db_username: "{{ db_user }}"
      db_password: "{{ db_password }}"
      db_database: "{{ db_database }}"
    volumes:
      - {{ ansistrano_shared_path }}/var/log:/usr/src/app/var/log
    networks:
      - backend

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '{{ mecure_password }}'
      MERCURE_SUBSCRIBER_JWT_KEY: '{{ mecure_password }}'
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins https://mecure-mpatate.silvain.eu
    # Comment the following line to disable the development mode
    command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    networks:
      - backend
      - host_nginx

  redis:
    image: redis
    restart: always
    networks:
      - backend

volumes:
  db-data:
    driver: local